# Crypto
cas.webflow.crypto.encryption.key=-NGPmW9QRNljs5e152D7sw
cas.webflow.crypto.signing.key=fimPev4xQRoWVyW4s-scf323fbTaLz4jrztmPTNHPIN9i6z6I62-Blu1vFSvy6AQYN4MAD7UpDcWEgCJXXKwNA
cas.authn.oauth.session-replication.cookie.crypto.signing.key=6fxjRRIZ_kDfTXJIHNBSZIQmrpb885crLMxtcysywNz_7XOHghH4vHTTDia64e6Tj8is5kNvXb4SnN_2IEjQNA
cas.authn.oauth.session-replication.cookie.crypto.encryption.key=IcmtVwJttkFdLatMdpIXaKo-nLyCwJQqL6qXMj0Ib7NhWcPM3aRB3ACY8tW8QVgUmWTgf24L1JbSfJ08Ax7IlQ
cas.tgc.crypto.signing.key=LjQrfTbug2WU4gr3IeyuTtkyW30VAkPCl6y7xVwjz1Nr5_vOjEfODLBzq3fGdpceyklhNS8vJyd6hD0mheBd0w
cas.tgc.crypto.encryption.key=pWk-HnoKegp5eIk8jSOloPq6l6t7XBWSgRCMqOWqsfVEkqLyMOJ3bASJDatkmIiD3lHreNpIEo1h4mh8-ZebfQ
cas.authn.oauth.crypto.signing.key=wOuZUTU-M5IaeLZxr83Uq15I8kQ69LjSu9ELjcViLKxN_tie83CeUXVWo9bJifjiY_IH1iA3WLuhyeY86aibIQ
cas.authn.oauth.crypto.encryption.key=8pEzybgqUCmzhGeRZ4gjlWBaahOCbhRUIQ4VumQ4ALhhH5eUJmManUN8FM_l8ljmw3Cguf6hPSokdJx0F91reQ
cas.authn.mfa.web-authn.crypto.encryption.key=7wRqTBhTV9jx6ZIxTq4Wkg71f3o7Y3CKsLv_m82EH2-JEI1q9sb3DSLqxjJWYQ6J-oQ9kwiFdey7tiolDBNcmA
cas.authn.mfa.web-authn.crypto.signing.key=S_9hrmQLfdihjPhLO5y-yuWYfZK27mMT57tRZ0tTX_W_3r-C4nNGFLBzE58vDjURgdqRkjSv8mk0CJLtpV5B3A
cas.authn.pm.reset.crypto.encryption.key=l3c5q-Z7RTJmrqR5IS6rvZM3joXukITPepYUiO3KgZEeGsoZBpPvjhNTsa8oYLbQn03tWI2duLDppnAle6qsNw
cas.authn.pm.reset.crypto.signing.key=CgKogfmVd3Sy2EiX99fO7rzMiuc9uN6wWmE0NnG5fy8XaEFgxgELaL0uX12WFud_C2TdqftHFJIn8sjShvdKRA
cas.authn.pac4j.core.session-replication.cookie.crypto.signing.key=a3ecsxlylWZGmsV_cVw9FUvljSU2dyNdmOdvb-5SL6lzroWqlFvN7WgjDniMdxJKmiRwPK9HpSe4STBO0TYAkA
cas.authn.pac4j.core.session-replication.cookie.crypto.encryption.key=U2H4FO49LJrZgTOAJWQINES1rpz42bnQ55GSRB5wfptHQet7Wl31rvxhOmvP1CPOuR5EaEVTZmCVZpAcahroKA

# Sane defaults
cas.authn.accept.enabled=false
logging.level.org.apereo=debug
cas.server.name=https://localhost:8443
cas.server.prefix=https://localhost:8443
cas.service-registry.json.location=file:/etc/cas/services
server.servlet.context-path=/

# LDAP
cas.authn.ldap[0].basedn=dc=example,dc=org
cas.authn.ldap[0].bind-credential=adminpassword
cas.authn.ldap[0].bind-dn=cn=admin,dc=example,dc=org
cas.authn.ldap[0].principal-attribute-list=cn,uid,mail,sn,givenName
cas.authn.ldap[0].type=AUTHENTICATED
cas.authn.ldap[0].ldap-url=ldap://ldap:389
cas.authn.ldap[0].use-start-tls=false
cas.authn.ldap[0].search-filter=cn={user}

cas.authn.mfa.web-authn.ldap.account-attribute-name=userSMIMECertificate
cas.authn.mfa.web-authn.ldap.base-dn=dc=example,dc=org
cas.authn.mfa.web-authn.ldap.bind-credential=adminpassword
cas.authn.mfa.web-authn.ldap.bind-dn=cn=admin,dc=example,dc=org
cas.authn.mfa.web-authn.ldap.ldap-url=ldap://ldap:1389
cas.authn.mfa.web-authn.ldap.search-filter=cn={user}

# Redis
cas.ticket.registry.redis.enabled=true
cas.ticket.registry.redis.host=redis
cas.ticket.registry.redis.port=6379
cas.ticket.registry.redis.database=1

# OIDC
cas.authn.oidc.core.issuer=https://localhost:8443/oidc
#cas.authn.oidc.core.accepted-issuers-pattern=<%= @oidc_issuers_pattern %>
#cas.authn.oidc.id-token.include-id-token-claims=<%= @oidc_id_token_claims %>
# Add OIDC claims and scopes.
# Map LDAP fields to OIDC claims.
# The following claims are considered standard OIDC claims:
#  * preferred_username
#  * email
#  * name (firstname)
#  * family_name
#  * group
cas.authn.oidc.core.claims-map.preferred_username=uid
cas.authn.oidc.core.claims-map.email=mail
cas.authn.oidc.core.claims-map.name=cn
cas.authn.oidc.core.claims-map.family_name=givenName
#cas.authn.oidc.core.claims-map.groups=memberOf
# Add a custom claim: memberOf
# memberOf is also represented as group in OIDC, but we
# add it as an additional claim to map it as an attribute
# for CAS to use when doing group membership validation.
#cas.authn.oidc.core.claims-map.memberOf=memberOf
# Groups are considered standard in most OIDC implementations,
# but not in CAS, so we add it as a custom scope. For the
# clients where will be no difference between a custom defined
# and standard scope.
#cas.authn.oidc.core.user-defined-scopes.groups=memberOf
# Let the clients know which scopes we provide.
cas.authn.oidc.discovery.scopes=openid,profile,email,family_name
# Claims available to clients, note that we add both memberOf
# and groups. The groups attribute is to provide the data in
# an attribute the clients will expect. Adding memberOf is
# solely to ensure that the attribute will be available to
# CAS itself when doing group membership validation. Removing
# the "memberOf" claim WILL remove is from the internal workings
# of the service definition and we will not be able to utilize
# it in "requiredAttributes". Note that memberOf is not part
# of any offered scope, clients will need to use groups.
cas.authn.oidc.discovery.claims=sub,name,email,family_name,preferred_username,profile

cas.theme.default-theme-name=wikimedia
CasFeatureModule.AccountManagement.enabled=false
cas.ticket.tgt.remember-me.enabled=true
